/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./data/index.js":
/*!***********************!*\
  !*** ./data/index.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _invasive_mollusca_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invasive-mollusca.js */ \"./data/invasive-mollusca.js\");\n/* harmony import */ var _pollinators_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pollinators.js */ \"./data/pollinators.js\");\n/* harmony import */ var _wetland_pollinators_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wetland-pollinators.js */ \"./data/wetland-pollinators.js\");\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  'invasive-mollusca': _invasive_mollusca_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  'pollinators': _pollinators_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  'wetland-pollinators': _wetland_pollinators_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]\n});\n\n\n//# sourceURL=webpack://biodiversity-matcher/./data/index.js?");

/***/ }),

/***/ "./data/invasive-mollusca.js":
/*!***********************************!*\
  !*** ./data/invasive-mollusca.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  metadata: {\n    title: {\n      en: 'Invasive Mollusca quiz'\n    },\n    description: {\n      en: 'Do your best to recognize these invasive Mollusca species! Created by Lars Willighagen.'\n    },\n    languages: ['en']\n  },\n  provider: {\n    type: 'inaturalist',\n    defaultOptions: {\n      licenses: ['cc-by', 'cc-by-nc', 'cc0', 'cc-by-sa', 'cc-by-nc-sa']\n    }\n  },\n  taxa: [\n    {\n      scientificName: 'Bivalvia',\n      taxonRank: 'class',\n      children: [\n        {\n          vernacularName: { en: 'Invasive Bivalvia' },\n          children: [\n            { scientificName: 'Dreissena polymorpha', taxonRank: 'species', taxa: 116340 },\n            { scientificName: 'Dreissena rostriformis bugensis', taxonRank: 'species', taxa: 151570 },\n            { scientificName: 'Corbicula fluminalis', taxonRank: 'species', taxa: 472901 },\n            { scientificName: 'Corbicula fluminea', taxonRank: 'species', taxa: 64006 }\n          ],\n        },\n        {\n          vernacularName: { en: 'Native Bivalvia' },\n          children: [\n            { scientificName: 'Unio tumidus', taxonRank: 'species', taxa: 151760 },\n            { scientificName: 'Unio pictorum', taxonRank: 'species', taxa: 151758 }\n          ]\n        }\n      ]\n    },\n    {\n      scientificName: 'Gastropoda',\n      taxonRank: 'class',\n      children: [\n        {\n          vernacularName: { en: 'Invasive Gastropoda' },\n          children: [\n            { scientificName: 'Potamopyrgus antipodarum', taxonRank: 'species', taxa: 129201 },\n            { scientificName: 'Physa acuta/Physella acuta', taxonRank: 'species', taxa: 563819 },\n            { scientificName: 'Lithoglyphus naticoides', taxonRank: 'species', taxa: 150740 },\n            { scientificName: 'Menetus dilatatus', taxonRank: 'species', taxa: 336768 }\n          ]\n        },\n        {\n          vernacularName: { en: 'Native Gastropoda' },\n          children: [\n            { scientificName: 'Valvata piscinalis', taxonRank: 'species', taxa: 151289 },\n            { scientificName: 'Bithynia tentaculata', taxonRank: 'species', taxa: 127189 }\n          ]\n        }\n      ]\n    }\n  ]\n});\n\n\n//# sourceURL=webpack://biodiversity-matcher/./data/invasive-mollusca.js?");

/***/ }),

/***/ "./data/pollinators.js":
/*!*****************************!*\
  !*** ./data/pollinators.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  metadata: {\n    title: {\n      en: 'Pollinator quiz',\n      nl: 'Bestuivers'\n    },\n    description: {\n      en: 'Do your best to recognize these pollinators! Created by Lars Willighagen.',\n      nl: 'Doe je best om deze bestuivers te herkennen! Gemaakt door Lars Willighagen.'\n    },\n    languages: ['nl', 'en']\n  },\n  provider: {\n    type: 'inaturalist',\n    defaultOptions: {\n      licenses: ['cc-by', 'cc-by-nc', 'cc0', 'cc-by-sa', 'cc-by-nc-sa'],\n      place_id: 7506\n    }\n  },\n  taxa: [\n    {\n      scientificName: 'Anthophila',\n      vernacularName: { nl: 'bijen' },\n      taxonRank: 'epifamily',\n      taxa: 630955,\n      children: [\n        {\n          scientificName: 'Anthidium/Anthidiellum',\n          vernacularName: { nl: 'wolbijen' },\n          taxonRank: 'genus',\n          taxa: 504741\n        },\n        {\n          scientificName: 'Andrena',\n          vernacularName: { nl: 'zandbijen' },\n          taxonRank: 'genus',\n          taxa: 57669,\n          children: [\n            {\n              scientificName: 'Andrena hattorfiana',\n              vernacularName: { nl: 'knautiabij' },\n              taxonRank: 'species',\n              taxa: 424814\n            }\n          ]\n        },\n        {\n          scientificName: 'Apis mellifera',\n          vernacularName: { nl: 'honingbij' },\n          taxonRank: 'species',\n          taxa: 47219\n        },\n        {\n          scientificName: 'Bombus',\n          vernacularName: { nl: 'hommels' },\n          taxonRank: 'genus',\n          taxa: 52775,\n          children: [\n            {\n              scientificName: 'Bombus hortorum',\n              vernacularName: { nl: 'tuinhommel' },\n              taxonRank: 'species',\n              taxa: 121989\n            },\n            {\n              scientificName: 'Bombus hypnorum',\n              vernacularName: { nl: 'boomhommel' },\n              taxonRank: 'species',\n              taxa: 61803\n            },\n            {\n              scientificName: 'Bombus lapidarius',\n              vernacularName: { nl: 'steenhommel' },\n              taxonRank: 'species',\n              taxa: 57619\n            },\n            {\n              scientificName: 'Bombus pascuorum',\n              vernacularName: { nl: 'akkerhommel' },\n              taxonRank: 'species',\n              taxa: 55637\n            },\n            {\n              scientificName: 'Bombus pratorum',\n              vernacularName: { nl: 'weidehommel' },\n              taxonRank: 'species',\n              taxa: 124910\n            },\n            {\n              scientificName: 'Bombus terrestris-complex',\n              vernacularName: { nl: 'aardhommels' },\n              taxonRank: 'complex',\n              taxa: [57516, 1092510]\n            },\n            {\n              scientificName: 'Psithyrus',\n              vernacularName: { nl: 'koekoekshommels' },\n              taxonRank: 'subgenus',\n              taxa: 538893\n            }\n          ]\n        },\n        {\n          scientificName: 'Chelostoma',\n          vernacularName: { nl: 'klokjesbijen' },\n          taxonRank: 'genus',\n          taxa: 357471\n        },\n        {\n          scientificName: 'Dasypoda hirtipes',\n          vernacularName: { nl: 'pluimvoetbij' },\n          taxonRank: 'species',\n          taxa: 746682\n        },\n        {\n          scientificName: 'Lasioglossum/Halictus',\n          vernacularName: { nl: 'groefbijen' },\n          taxonRank: 'genus',\n          taxa: 335597,\n          children: [\n            {\n              scientificName: 'Halictus scabiosae',\n              vernacularName: { nl: 'breedbandgroefbij' },\n              taxonRank: 'species',\n              taxa: 415589\n            }\n          ]\n        },\n        {\n          scientificName: 'Macropis europaea',\n          vernacularName: { nl: 'slobkousbij' },\n          taxonRank: 'species',\n          taxa: 188686\n        },\n        {\n          scientificName: 'Megachile',\n          vernacularName: { nl: 'behangersbijen' },\n          taxonRank: 'genus',\n          taxa: 125786\n        },\n        {\n          scientificName: 'Nomada',\n          vernacularName: { nl: 'wespbijen' },\n          taxonRank: 'genus',\n          taxa: 53648\n        },\n        {\n          scientificName: 'Osmia/Hoplitis',\n          vernacularName: { nl: 'metselbijen' },\n          taxonRank: 'genus',\n          taxa: 465612\n        },\n        {\n          scientificName: 'Sphecodes',\n          vernacularName: { nl: 'bloedbijen' },\n          taxonRank: 'genus',\n          taxa: 61891\n        }\n      ]\n    },\n    {\n      scientificName: 'Syrphidae',\n      vernacularName: { nl: 'zweefvliegen' },\n      taxonRank: 'family',\n      taxa: 49995,\n      children: [\n        {\n          scientificName: 'Anasimyia/Eurimyia lineata',\n          taxonRank: 'species',\n          taxa: 1144215\n        },\n        {\n          scientificName: 'Cheilosia',\n          vernacularName: { nl: 'gitjes' },\n          taxonRank: 'genus',\n          taxa: 124483\n        },\n        {\n          scientificName: 'Chrysotoxum',\n          vernacularName: { nl: 'fopwespen' },\n          taxonRank: 'genus',\n          taxa: 119997\n        },\n        {\n          scientificName: 'Dasysyrphus',\n          vernacularName: { nl: 'wimperzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 346004\n        },\n        {\n          scientificName: 'Episyrphus balteatus',\n          vernacularName: { nl: 'snor-/marmelade-/pyjamazweefvlieg' },\n          taxonRank: 'species',\n          taxa: 52482\n        },\n        {\n          scientificName: 'Eristalis',\n          vernacularName: { nl: 'bijvliegen' },\n          taxonRank: 'genus',\n          taxa: 52491,\n          children: [\n            {\n              scientificName: 'Eristalis intricaria',\n              vernacularName: { nl: 'hommelbijvlieg' },\n              taxonRank: 'species',\n              taxa: 497713\n            }\n          ]\n        },\n        {\n          scientificName: 'Eristalinus',\n          vernacularName: { nl: 'vlekogen' },\n          taxonRank: 'genus',\n          taxa: 145541\n        },\n        {\n          scientificName: 'Eupeodes',\n          vernacularName: { nl: 'kommazwevers' },\n          taxonRank: 'genus',\n          taxa: 69190\n        },\n        {\n          scientificName: 'Helophilus',\n          vernacularName: { nl: 'pendelzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 52487\n        },\n        {\n          scientificName: 'Melanostoma',\n          vernacularName: { nl: 'driehoekzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 70406\n        },\n        {\n          scientificName: 'Merodon equestris',\n          vernacularName: { nl: 'narcissenvlieg' },\n          taxonRank: 'species',\n          taxa: 194786\n        },\n        {\n          scientificName: 'Myathropa florea',\n          vernacularName: { nl: 'doodskopzweefvlieg' },\n          taxonRank: 'species',\n          taxa: 70211\n        },\n        {\n          scientificName: 'Rhingia campestris',\n          vernacularName: { nl: 'gewone snuitvlieg' },\n          taxonRank: 'species',\n          taxa: 355014\n        },\n        {\n          scientificName: 'Scaeva pyrastri',\n          vernacularName: { nl: 'witte halvemaanzwever' },\n          taxonRank: 'species',\n          taxa: 52160\n        },\n        {\n          scientificName: 'Sericomyia',\n          vernacularName: { nl: 'veenzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 68133\n        },\n        {\n          scientificName: 'Sphaerophoria',\n          vernacularName: { nl: 'langlijven' },\n          taxonRank: 'genus',\n          taxa: 52965\n        },\n        {\n          scientificName: 'Syritta pipiens',\n          vernacularName: { nl: 'menuetzweefvlieg' },\n          taxonRank: 'species',\n          taxa: 81979\n        },\n        {\n          scientificName: 'Syrphus',\n          vernacularName: { nl: 'bandzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 52489\n        },\n        {\n          scientificName: 'Volucella',\n          vernacularName: { nl: 'reuzen' },\n          taxonRank: 'genus',\n          taxa: 52481,\n          children: [\n            {\n              scientificName: 'Volucella pellucens',\n              vernacularName: { nl: 'ivoorzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 52480\n            },\n            {\n              scientificName: 'Volucella zonaria',\n              vernacularName: { nl: 'stadreus' },\n              taxonRank: 'species',\n              taxa: 343983\n            }\n          ]\n        },\n        {\n          scientificName: 'Xylota/Chalcosyrphus',\n          vernacularName: { nl: 'bladlopers' },\n          taxonRank: 'genus',\n          taxa: 488420\n        }\n      ]\n    }\n  ]\n});\n\n\n//# sourceURL=webpack://biodiversity-matcher/./data/pollinators.js?");

/***/ }),

/***/ "./data/wetland-pollinators.js":
/*!*************************************!*\
  !*** ./data/wetland-pollinators.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  metadata: {\n    title: {\n      en: 'Wetland pollinator quiz',\n      nl: 'Bestuivers veengebieden'\n    },\n    description: {\n      en: 'Do your best to recognize these wetland pollinators! Created by Lars Willighagen.',\n      nl: 'Doe je best om deze bestuivers uit veengebieden te herkennen! Gemaakt door Lars Willighagen.'\n    },\n    languages: ['nl', 'en']\n  },\n  provider: {\n    type: 'gbif',\n    defaultOptions: {\n      licenses: ['CC_BY_4_0', 'CC_BY_NC_4_0', 'CC0_1_0'],\n      country: 'NL'\n    }\n  },\n  taxa: [\n    {\n      scientificName: 'Anthophila',\n      vernacularName: { nl: 'bijen' },\n      taxonRank: 'epifamily',\n      taxa: [7901, 4334, 7905, 7908, 7911, 4345],\n      children: [\n        {\n          scientificName: 'Andrena',\n          vernacularName: { nl: 'zandbijen' },\n          taxonRank: 'genus',\n          taxa: 1345710\n        },\n        {\n          scientificName: 'Apis mellifera',\n          vernacularName: { nl: 'honingbij' },\n          taxonRank: 'species',\n          taxa: 1341976\n        },\n        {\n          scientificName: 'Bombus',\n          vernacularName: { nl: 'hommels' },\n          taxonRank: 'genus',\n          taxa: 1340278,\n          children: [\n            {\n              scientificName: 'Bombus hortorum',\n              vernacularName: { nl: 'tuinhommel' },\n              taxonRank: 'species',\n              taxa: 1340542\n            },\n            {\n              scientificName: 'Bombus humilis',\n              vernacularName: { nl: 'heidehommel' },\n              taxonRank: 'species',\n              taxa: 1340523\n            },\n            {\n              scientificName: 'Bombus hypnorum',\n              vernacularName: { nl: 'boomhommel' },\n              taxonRank: 'species',\n              taxa: 1340513\n            },\n            {\n              scientificName: 'Bombus jonellus',\n              vernacularName: { nl: 'veenhommel' },\n              taxonRank: 'species',\n              taxa: 1340308\n            },\n            {\n              scientificName: 'Bombus lapidarius',\n              vernacularName: { nl: 'steenhommel' },\n              taxonRank: 'species',\n              taxa: 1340301\n            },\n            {\n              scientificName: 'Bombus pascuorum',\n              vernacularName: { nl: 'akkerhommel' },\n              taxonRank: 'species',\n              taxa: 1340405\n            },\n            {\n              scientificName: 'Bombus pratorum',\n              vernacularName: { nl: 'weidehommel' },\n              taxonRank: 'species',\n              taxa: 1340305\n            },\n            {\n              scientificName: 'Bombus terrestris-complex',\n              vernacularName: { nl: 'aardhommels' },\n              taxonRank: 'complex',\n              taxa: [1340503, 1340298, 5870368, 4496017]\n            },\n            {\n              scientificName: 'Psithyrus',\n              vernacularName: { nl: 'koekoekshommels' },\n              taxonRank: 'subgenus',\n              taxa: [1340434, 1340362, 1340527, 1340506, 1340344, 1340333, 1340418]\n            }\n          ]\n        },\n        {\n          scientificName: 'Chelostoma',\n          vernacularName: { nl: 'klokjesbijen' },\n          taxonRank: 'genus',\n          taxa: 1334493\n        },\n        {\n          scientificName: 'Colletes',\n          vernacularName: { nl: 'zijdebijen' },\n          taxonRank: 'genus',\n          taxa: 1348504\n        },\n        {\n          scientificName: 'Dasypoda hirtipes',\n          vernacularName: { nl: 'pluimvoetbij' },\n          taxonRank: 'species',\n          taxa: 1345858\n        },\n        {\n          scientificName: 'Lasioglossum/Halictus',\n          vernacularName: { nl: 'groefbijen' },\n          taxonRank: 'genus',\n          taxa: [1347978, 1353501],\n          children: [\n            {\n              scientificName: 'Halictus rubicundus',\n              vernacularName: { nl: 'roodpotige groefbij' },\n              taxonRank: 'species',\n              taxa: 1353453\n            },\n            {\n              scientificName: 'Halictus scabiosae',\n              vernacularName: { nl: 'breedbandgroefbij' },\n              taxonRank: 'species',\n              taxa: 1353395\n            }\n          ]\n        },\n        {\n          scientificName: 'Panurgus',\n          vernacularName: { nl: 'roetbijen' },\n          taxonRank: 'genus',\n          taxa: 1352891\n        }\n      ]\n    },\n    {\n      scientificName: 'Syrphidae',\n      vernacularName: { nl: 'zweefvliegen' },\n      taxonRank: 'family',\n      taxa: 6920,\n      children: [\n        {\n          scientificName: 'Anasimyia/Eurimyia lineata',\n          taxonRank: 'species',\n          taxa: 10366531\n        },\n        {\n          scientificName: 'Cheilosia',\n          vernacularName: { nl: 'gitjes' },\n          taxonRank: 'genus',\n          taxa: 1539835,\n          children: [\n            {\n              scientificName: 'Cheilosia fraterna',\n              vernacularName: { nl: 'moerasgitje' },\n              taxonRank: 'species',\n              taxa: 1540067\n            }\n          ]\n        },\n        {\n          scientificName: 'Chrysotoxum',\n          vernacularName: { nl: 'fopwespen' },\n          taxonRank: 'genus',\n          taxa: 1535870,\n          children: [\n            {\n              scientificName: 'Chrysotoxum bicinctum',\n              vernacularName: { nl: 'donkere fopwesp' },\n              taxonRank: 'species',\n              taxa: 1536009\n            }\n          ]\n        },\n        {\n          scientificName: 'Episyrphus balteatus',\n          vernacularName: { nl: 'snor-/marmelade-/pyjamazweefvlieg' },\n          taxonRank: 'species',\n          taxa: 1536449\n        },\n        {\n          scientificName: 'Eristalinus',\n          vernacularName: { nl: 'vlekogen' },\n          taxonRank: 'genus',\n          taxa: 1542672\n        },\n        {\n          scientificName: 'Eristalis',\n          vernacularName: { nl: 'bijvliegen' },\n          taxonRank: 'genus',\n          taxa: 1491190,\n          children: [\n            {\n              scientificName: 'Eristalis intricaria',\n              vernacularName: { nl: 'hommelbijvlieg' },\n              taxonRank: 'species',\n              taxa: 1541262\n            }\n          ]\n        },\n        {\n          scientificName: 'Eumerus',\n          vernacularName: { nl: 'bollenzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 1534472\n        },\n        {\n          scientificName: 'Eupeodes',\n          vernacularName: { nl: 'kommazwevers' },\n          taxonRank: 'genus',\n          taxa: 1540675,\n          children: [\n            {\n              scientificName: 'Eupeodes corollae',\n              vernacularName: { nl: 'terrasjeskommazwever' },\n              taxonRank: 'species',\n              taxa: 1540742\n            },\n            {\n              scientificName: 'Eupeodes latifasciatus',\n              vernacularName: { nl: 'gele kommazwever' },\n              taxonRank: 'species',\n              taxa: 1540691\n            }\n          ]\n        },\n        {\n          scientificName: 'Helophilus',\n          vernacularName: { nl: 'pendelzweefvliegen' },\n          taxonRank: 'genus',\n          children: [\n            {\n              scientificName: 'Helophilus hybridus',\n              vernacularName: { nl: 'moeraspendelzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 5071368\n            },\n            {\n              scientificName: 'Helophilus pendulus',\n              vernacularName: { nl: 'gewone pendelzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 5071352\n            },\n            {\n              scientificName: 'Helophilus trivittatus',\n              vernacularName: { nl: 'citroenspendelzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 5071382\n            }\n          ]\n        },\n        {\n          scientificName: 'Melanostoma',\n          vernacularName: { nl: 'driehoekzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 1533169,\n          children: [\n            {\n              scientificName: 'Melanostoma mellinum',\n              vernacularName: { nl: 'gewone driehoekzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 5766554\n            },\n            {\n              scientificName: 'Melanostoma scalare',\n              vernacularName: { nl: 'slanke driehoekzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 5766556\n            }\n          ]\n        },\n        {\n          scientificName: 'Orthonevra',\n          vernacularName: { nl: 'glimmers' },\n          taxonRank: 'genus',\n          taxa: 1537455\n        },\n        {\n          scientificName: 'Platycheirus',\n          vernacularName: { nl: 'platvoetjes' },\n          taxonRank: 'genus',\n          taxa: 1542996\n        },\n        {\n          scientificName: 'Pyrophaena',\n          taxonRank: 'genus',\n          children: [\n            {\n              scientificName: 'Pyrophaena granditarsa',\n              vernacularName: { nl: 'klompvoetje' },\n              taxonRank: 'species',\n              taxa: 5886305\n            },\n            {\n              scientificName: 'Pyrophaena rosarum',\n              vernacularName: { nl: 'vlinderstrikje' },\n              taxonRank: 'species',\n              taxa: 4294542\n            }\n          ]\n        },\n        {\n          scientificName: 'Rhingia campestris',\n          vernacularName: { nl: 'gewone snuitvlieg' },\n          taxonRank: 'species',\n          taxa: 1537412\n        },\n        {\n          scientificName: 'Scaeva',\n          vernacularName: { nl: 'halvemaanzwevers' },\n          taxonRank: 'genus',\n          children: [\n            {\n              scientificName: 'Scaeva pyrastri',\n              vernacularName: { nl: 'witte halvemaanzwever' },\n              taxonRank: 'species',\n              taxa: 1537719\n            },\n            {\n              scientificName: 'Scaeva selenitica',\n              vernacularName: { nl: 'gele halvemaanzwever' },\n              taxonRank: 'species',\n              taxa: 1537717\n            }\n          ]\n        },\n        {\n          scientificName: 'Sericomyia',\n          vernacularName: { nl: 'veenzweefvliegen' },\n          taxonRank: 'genus',\n          children: [\n            {\n              scientificName: 'Sericomyia lappona',\n              vernacularName: { nl: 'donkere veenzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 1538831\n            },\n            {\n              scientificName: 'Sericomyia silentis',\n              vernacularName: { nl: 'hoogveenzweefvlieg' },\n              taxonRank: 'species',\n              taxa: 1538798\n            }\n          ]\n        },\n        {\n          scientificName: 'Sphaerophoria',\n          vernacularName: { nl: 'langlijven' },\n          taxonRank: 'genus',\n          taxa: 1539106\n        },\n        {\n          scientificName: 'Syritta pipiens',\n          vernacularName: { nl: 'menuetzweefvlieg' },\n          taxonRank: 'species',\n          taxa: 1544431\n        },\n        {\n          scientificName: 'Syrphus',\n          vernacularName: { nl: 'bandzweefvliegen' },\n          taxonRank: 'genus',\n          taxa: 1444606\n        },\n        {\n          scientificName: 'Volucella',\n          vernacularName: { nl: 'reuzen' },\n          taxonRank: 'genus',\n          taxa: 1483491,\n          children: [\n            {\n              scientificName: 'Volucella bombylans',\n              vernacularName: { nl: 'hommelreus' },\n              taxonRank: 'species',\n              taxa: 1541763\n            }\n          ]\n        },\n        {\n          scientificName: 'Xylota/Chalcosyrphus',\n          vernacularName: { nl: 'bladlopers' },\n          taxonRank: 'genus',\n          taxa: [1541512, 1533584]\n        }\n      ]\n    }\n  ]\n});\n\n\n//# sourceURL=webpack://biodiversity-matcher/./data/wetland-pollinators.js?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   App: () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _locales_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locales.js */ \"./src/locales.js\");\n/* harmony import */ var _providers_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./providers/provider.js */ \"./src/providers/provider.js\");\n/* harmony import */ var _quiz_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quiz.js */ \"./src/quiz.js\");\n\n\n\n\nclass App {\n    constructor (quiz) {\n        this.quiz = quiz\n\n        this.displayInterface()\n\n        this.displayQuizInfo()\n        document.body.classList.remove('loading')\n\n        this.displaySettings()\n        this.displayAnswerOptions()\n\n        document.getElementById('quiz-options').addEventListener('click', () => {\n            document.getElementById('dialog-quiz-options').showModal()\n        })\n        document.getElementById('dialog-quiz-options').addEventListener('close', () => {\n            this.displayAnswerOptions()\n        })\n        document.getElementById('answers-next').addEventListener('click', () => {\n            this.loadQuestion()\n        })\n        document.getElementById('answers-giveup').addEventListener('click', () => {\n            this.displayResult(this.quiz.performGiveUp())\n        })\n        document.getElementById('round-output').addEventListener('click', () => {\n            this.hideResult()\n        })\n        document.getElementById('quiz-share').addEventListener('click', () => {\n            this.shareUrl(this.quiz.getUrl())\n        })\n        document.getElementById('quiz-share-settings').addEventListener('click', () => {\n            this.shareUrl(this.quiz.getUrl(true))\n        })\n        document.getElementById('options-answers-select').addEventListener('click', () => {\n            document.querySelectorAll('#options-answers input').forEach(($input) => {\n                $input.click()\n            })\n        })\n        document.getElementById('options-answers-deselect').addEventListener('click', () => {\n            document.querySelectorAll('#options-answers input').forEach(($input) => {\n                $input.click()\n            })\n        })\n        document.body.addEventListener('keyup', (event) => {\n            if (event.key === 'n' || event.key === 'N' || event.code === 'KeyN' || event.keyCode === 78) {\n                this.loadQuestion()\n            } else if (event.key === 'g' || event.key === 'G' || event.code === 'KeyG' || event.keyCode === 71) {\n                this.displayResult(this.quiz.performGiveUp())\n            }\n        })\n    }\n\n    displayInterface () {\n        document.querySelectorAll('[data-l10n]').forEach(($label) => {\n            $label.textContent = this.quiz.getMessage($label.dataset.l10n)\n        })\n    }\n\n    displayQuizInfo () {\n        const { title, description } = this.quiz.getMetadata()\n\n        const $title = document.querySelector('title')\n        $title.textContent = title + ' - Biodiversity Matcher'\n        const $description = document.querySelector('meta[name=description]')\n        $description.textContent = description\n\n        document.querySelectorAll('.quiz-title').forEach(($title) => { $title.textContent = title })\n        document.querySelectorAll('.quiz-description').forEach(($description) => { $description.textContent = description })\n\n        document.querySelector('html').setAttribute('lang', this.quiz.settings.language)\n    }\n\n    displaySettings () {\n        this.displayAnswerSettings()\n\n        // TODO season/life stage\n\n        const optionLanguage = document.getElementById('options-language')\n        optionLanguage.value = this.quiz.settings.language\n        optionLanguage.addEventListener('change', () => {\n            this.quiz.settings.language = optionLanguage.value\n            this.displayInterface()\n            this.displayQuizInfo()\n        })\n\n        const optionLanguageVernacularName = document.getElementById('options-language-vernacular-names')\n        optionLanguageVernacularName.value = this.quiz.settings.vernacularNameLanguage\n        optionLanguageVernacularName.addEventListener('change', () => {\n            this.quiz.settings.vernacularNameLanguage = optionLanguageVernacularName.value\n        })\n    }\n\n    displayAnswerSettings (taxa, $container) {\n        if (!taxa) {\n            taxa = this.quiz.taxonomy.taxaByTree\n            $container = document.getElementById('options-answers')\n\n            while ($container.firstChild) {\n                $container.removeChild($container.firstChild)\n            }\n        }\n\n        for (const taxon of taxa) {\n            const $div = document.createElement('div')\n            $div.classList.add('answers-option')\n            $container.append($div)\n\n            if (taxon.id) {\n                const id = `options-answer-${taxon.id}`\n                const $label = document.createElement('label')\n                $label.innerHTML = this.quiz.getTaxonLabel(taxon)\n                $label.setAttribute('for', id)\n                $div.append($label)\n                const $input = document.createElement('input')\n                $input.setAttribute('id', id)\n                $input.setAttribute('type', 'checkbox')\n                $input.setAttribute('name', 'options-answer')\n                $input.setAttribute('value', taxon.id)\n                $input.checked = taxon.active\n                $div.append($input)\n\n                // Event listeners\n                $input.addEventListener('change', () => {\n                    this.quiz.taxonomy.setActive(taxon.id, $input.checked)\n                })\n            } else {\n                const $span = document.createElement('span')\n                $span.innerHTML = this.quiz.getTaxonLabel(taxon)\n                $div.append($span)\n            }\n\n            if (taxon.children) {\n                const $div = document.createElement('div')\n                $div.classList.add('answers-options-group')\n                $container.append($div)\n\n                this.displayAnswerSettings(taxon.children, $div)\n            }\n        }\n    }\n\n    displayAnswerOptions (taxa, $container) {\n        if (!taxa) {\n            taxa = this.quiz.taxonomy.taxaByTree\n            $container = document.getElementById('answers-options')\n\n            while ($container.firstChild) {\n                $container.removeChild($container.firstChild)\n            }\n        }\n\n        for (const taxon of taxa) {\n            if (!taxon.active && !taxon.hasActiveChildTaxa()) {\n                continue\n            }\n\n            const $div = document.createElement('div')\n            $div.classList.add('answers-option')\n            $container.append($div)\n\n            if (taxon.id && taxon.active) {\n                const id = `answer-${taxon.id}`\n                const $label = document.createElement('label')\n                $label.innerHTML = this.quiz.getTaxonLabel(taxon)\n                $label.setAttribute('for', id)\n                $div.append($label)\n                const $input = document.createElement('input')\n                $input.setAttribute('id', id)\n                $input.setAttribute('type', 'radio')\n                $input.setAttribute('name', 'answer')\n                $input.setAttribute('value', taxon.id)\n                $div.append($input)\n\n                // Event listeners\n                $input.addEventListener('change', () => {\n                    const selected = document.querySelector('.answers-option.selected')\n                    if (selected) {\n                        selected.classList.remove('selected')\n                    }\n                    $input.parentElement.classList.add('selected')\n                })\n                $input.addEventListener('click', () => {\n                    if ($input.parentElement.classList.contains('selected')) {\n                        const guess = document.getElementById('answers-options').answer.value\n                        this.displayResult(this.quiz.performGuess(guess))\n                    }\n                })\n            } else {\n                const $span = document.createElement('span')\n                $span.innerHTML = this.quiz.getTaxonLabel(taxon)\n                $div.append($span)\n            }\n\n            if (taxon.children.length) {\n                const $div = document.createElement('div')\n                $div.classList.add('answers-options-group')\n                $container.append($div)\n\n                this.displayAnswerOptions(taxon.children, $div)\n            }\n        }\n    }\n\n    async loadQuestion () {\n        const $nextButton = document.getElementById('answers-next')\n        $nextButton.disabled = true\n\n        // Load question data\n        try {\n            const { question } = await this.quiz.loadRound()\n            this.displayQuestion(question)\n        } catch (error) {\n            this.displayResult({ success: false, message: error.message })\n        }\n\n        $nextButton.disabled = false\n    }\n\n    displayQuestion (question) {\n        // Clear existing content\n        this.hideResult()\n\n        this.displayImage(question.images[0])\n\n        const $gallery = document.getElementById('round-gallery')\n        while ($gallery.firstChild) {\n            $gallery.removeChild($gallery.firstChild)\n        }\n\n        for (const image of question.images) {\n            const $thumbnail = document.createElement('img')\n            $thumbnail.setAttribute('src', image.thumbnail)\n            $thumbnail.addEventListener('click', () => { this.displayImage(image) })\n            $gallery.append($thumbnail)\n        }\n\n        const $link = document.getElementById('round-link')\n        $link.setAttribute('href', question.url)\n    }\n\n    displayImage (image) {\n        const $caption = document.querySelector('#round-image figcaption a')\n        $caption.textContent = image.caption\n        const $img = document.querySelector('#round-image img')\n        $img.removeAttribute('src')\n        $img.setAttribute('src', image.src)\n    }\n\n    displayResult (result) {\n        if (!result) {\n            return\n        }\n\n        const $result = document.getElementById('round-output')\n        $result.dataset.success = result.success\n        $result.innerHTML = result.message\n    }\n\n    hideResult () {\n        const $result = document.getElementById('round-output')\n        delete $result.dataset.success\n        while ($result.firstChild) {\n            $result.removeChild($result.firstChild)\n        }\n    }\n\n    shareUrl (url) {\n        navigator.clipboard.writeText(url)\n            .then(() => { this.displayResult({ success: true, message: this.quiz.getMessage('copy_success') }) })\n            .catch(() => { this.displayResult({ success: false, message: this.quiz.getMessage('copy_fail') }) })\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/app.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.js */ \"./src/app.js\");\n/* harmony import */ var _quiz_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quiz.js */ \"./src/quiz.js\");\n/* harmony import */ var _data_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../data/index.js */ \"./data/index.js\");\n\n\n\n\nasync function main () {\n    const params = new URLSearchParams(window.location.search)\n\n    setTimeout(function () {\n        if (document.body.classList.contains('loading')) {\n            console.warn('Loading took over 50 ms')\n            document.body.classList.remove('loading')\n        }\n    }, 100)\n\n    if (params.has('quiz')) {\n        const id = params.get('quiz')\n        const quiz = new _quiz_js__WEBPACK_IMPORTED_MODULE_1__.Quiz(id, _data_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][id], {\n            language: params.get('l') || 'en',\n            vernacularNameLanguage: params.get('nl') || 'en'\n            // TODO season/life stage\n        })\n\n        if (params.has('taxon')) {\n            const taxa = params.get('taxon').split('|')\n            for (const id in quiz.taxonomy.taxaById) {\n                quiz.taxonomy.setActive(id, taxa.includes(id))\n            }\n        }\n\n        const app = new _app_js__WEBPACK_IMPORTED_MODULE_0__.App(quiz)\n        app.loadQuestion()\n    }\n}\n\nwindow.addEventListener('load', main)\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/index.js?");

/***/ }),

/***/ "./src/locales.js":
/*!************************!*\
  !*** ./src/locales.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   en: () => (/* binding */ en),\n/* harmony export */   nl: () => (/* binding */ nl)\n/* harmony export */ });\nconst nl = {\n  options: 'Opties',\n  giveup: 'Geef op',\n  next: 'Volgende',\n\n  source_code: 'Broncode',\n  license: 'Licentie',\n  feedback: 'Feedback',\n  share: 'Delen',\n  share_settings: 'Delen met instellingen',\n  copy_success: 'Gekopiëerd!',\n  copy_fail: 'Kon niet kopiëren',\n  quiz_settings: 'Instellingen quiz',\n  included_taxa: 'Soorten',\n  select_all: 'Alle selecteren',\n  deselect_all: 'Alle deselecteren',\n  general_settings: 'Algemene instellingen',\n  language: 'Taal',\n  species_name_language: 'Taal soortnamen',\n  close: 'Sluiten',\n\n  guess_correct: 'Dat is juist! Dit is een {0}.',\n  guess_close: 'Dit is inderdaad een {0}, maar een andere soort. Raad opnieuw.',\n  guess_imprecise: 'Dit is inderdaad een {0}, maar je kan een nauwkeuriger antwoord geven. Raad opnieuw.',\n  guess_incorrect: 'Dit is niet een {0}. Raad opnieuw',\n  guess_giveup: 'Dit is een {0}.',\n  part_of: '{0}, deel van {1}',\n  error_no_question: 'Er zijn geen vragen beschikbaar voor {0}.',\n  error_general: 'Foutmelding: {0}'\n}\n\nconst en = {\n  options: 'Options',\n  giveup: 'Give up',\n  next: 'Next',\n\n  source_code: 'Source code',\n  license: 'License',\n  feedback: 'Feedback',\n  share: 'Share',\n  share_settings: 'Share with settings',\n  copy_success: 'Copied!',\n  copy_fail: 'Could not copy',\n  quiz_settings: 'Quiz settings',\n  included_taxa: 'Included taxa',\n  select_all: 'Select all',\n  deselect_all: 'Deselect all',\n  general_settings: 'General settings',\n  language: 'Language',\n  species_name_language: 'Species name language',\n  close: 'Close',\n\n  guess_correct: 'That is correct! This is a {0}.',\n  guess_close: 'This is indeed {0}, but a different subtaxon. Guess again.',\n  guess_imprecise: 'This is indeed {0}, but a more specific subtaxon. Guess again.',\n  guess_incorrect: 'This is not a {0}. Guess again.',\n  guess_giveup: 'This is a {0}.',\n  part_of: '{0}, part of {1}',\n  error_no_question: 'No questions available for {0}.',\n  error_general: 'Technical error: {0}'\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/locales.js?");

/***/ }),

/***/ "./src/providers/gbif.js":
/*!*******************************!*\
  !*** ./src/providers/gbif.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GbifProvider: () => (/* binding */ GbifProvider)\n/* harmony export */ });\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider.js */ \"./src/providers/provider.js\");\n/* harmony import */ var _taxon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../taxon.js */ \"./src/taxon.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./src/util.js\");\n\n\n\n\nclass GbifProvider extends _provider_js__WEBPACK_IMPORTED_MODULE_0__.Provider {\n    async fetchQuestions (category, options) {\n        if (!this.cache[category]) {\n            this.cache[category] = { offset: 0, questions : [] }\n        }\n\n        let success = false\n        let done = false\n        let counter = 0\n\n        while (!success && !done) {\n            // Fetch data\n            const data = await fetch((0,_util_js__WEBPACK_IMPORTED_MODULE_2__.formatUrl)('https://api.gbif.org/v1/occurrence/search', {\n                mediaType: 'StillImage',\n                taxonKey: options.taxon.taxa,\n                country: options.country,\n                license: options.licenses,\n                occurrenceStatus: 'PRESENT',\n                limit: 50,\n                offset: this.cache[category].offset\n            })).then(response => response.json())\n\n            // Filter and process data\n            let results = data.results ?? []\n            this.cache[category].offset += results.length\n\n            results = results.filter(result => ['SPECIES', 'SUBSPECIES', 'VARIETY'].includes(result.taxonRank))\n\n            const excludedTaxa = options.taxon.getChildTaxa()\n            if (excludedTaxa.length) {\n                results = results.filter(result => !this._isResultExcluded(result, excludedTaxa))\n            }\n\n            this.cache[category].questions.push(...results.map(result => this._parseResult(result)))\n\n            counter++\n            success = results.length > 0\n            done = data.endOfRecords || counter > 10\n        }\n\n        return success\n    }\n\n    _isResultExcluded (result, exclude) {\n        const parents = ['kingdomKey', 'phylumKey', 'classKey', 'orderKey', 'familyKey', 'genusKey', 'speciesKey']\n        return exclude.some(id => parents.some(parent => result[parent] === id))\n    }\n\n    _parseResult (result) {\n        const taxon = {\n            id: result.acceptedTaxonKey,\n            scientificName: result[result.taxonRank.toLowerCase()],\n            taxonRank: result.taxonRank.toLowerCase(),\n            // vernacularName\n        }\n\n        if (!taxon.scientificName && result.infraspecificEpithet) {\n            taxon.scientificName = taxon.scientificName + ' ' + result.infraspecificEpithet\n        } else if (!taxon.scientificName) {\n            taxon.scientificName = result.scientificName\n        }\n\n        return {\n            taxon: new _taxon_js__WEBPACK_IMPORTED_MODULE_1__.Taxon(taxon),\n            url: `https://www.gbif.org/occurrence/${result.key}`,\n            images: result.media.filter(media => media.type === 'StillImage').map(media => this._parseMedia(media))\n        }\n    }\n\n    _parseMedia (media) {\n        const image = {\n            src: media.identifier,\n            thumbnail: media.identifier,\n            caption: `© ${media.rightsHolder}`\n        }\n\n        if (image.src.startsWith('https://inaturalist-open-data.s3.amazonaws.com/photos/')) {\n            image.src = image.src.replace('original', 'large')\n            image.thumbnail = image.thumbnail.replace('original', 'square')\n        } else if (image.src.startsWith('https://observation.org/photos/')) {\n            image.thumbnail = image.thumbnail + '?w=200&h=150'\n        }\n\n        if (media.license) {\n            let license = media.license\n            if (license.match(/https?:\\/\\/creativecommons\\.org\\/licenses\\//)) {\n                const [clauses, version] = license.replace(/\\/$/, '').split('/').slice(-2)\n                license = `CC ${clauses.toUpperCase()} ${version}`\n            } else if (license.match(/https?:\\/\\/creativecommons\\.org\\/publicdomain\\//)) {\n                const [version] = license.replace(/\\/$/, '').split('/').slice(-1)\n                license = `CC0 ${version}`\n            }\n            image.caption = `${image.caption} (${license})`\n        }\n\n        return image\n    }\n\n    getCachedQuestions (category) {\n        return this.cache[category]?.questions\n    }\n\n    hasCachedQuestions (category) {\n        return this.cache.hasOwnProperty(category) && this.cache[category].questions.length > 0\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/providers/gbif.js?");

/***/ }),

/***/ "./src/providers/inaturalist.js":
/*!**************************************!*\
  !*** ./src/providers/inaturalist.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iNaturalistProvider: () => (/* binding */ iNaturalistProvider)\n/* harmony export */ });\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider.js */ \"./src/providers/provider.js\");\n/* harmony import */ var _taxon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../taxon.js */ \"./src/taxon.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util.js */ \"./src/util.js\");\n\n\n\n\nclass iNaturalistProvider extends _provider_js__WEBPACK_IMPORTED_MODULE_0__.Provider {\n    async fetchQuestions (category, options) {\n        if (!this.cache[category]) {\n            this.cache[category] = { page: 1, questions : [] }\n        }\n\n        const urlOptions = {\n            photos: true,\n            taxon_id: options.taxon.taxa.join(','),\n            place_id: options.placeId,\n            license: options.licenses.join(','),\n            photo_license: options.licenses.join(','),\n            quality_grade: 'research',\n            locale: options.vernacularNameLanguage,\n            per_page: 50,\n            page: this.cache[category].page\n        }\n\n        const excludedTaxa = options.taxon.getChildTaxa()\n        if (excludedTaxa.length) {\n            urlOptions.without_taxon_id = excludedTaxa.join(',')\n        }\n\n        // Fetch data\n        const data = await fetch((0,_util_js__WEBPACK_IMPORTED_MODULE_2__.formatUrl)('https://api.inaturalist.org/v1/observations', urlOptions))\n            .then(response => response.json())\n\n        // Filter and process data\n        this.cache[category].page++\n\n        if (data.results != null && data.results.length) {\n            this.cache[category].questions.push(...data.results.map(result => this._parseResult(result, options)))\n\n            return true\n        }\n\n        return false\n    }\n\n    _parseResult (result, options) {\n        return {\n            taxon: new _taxon_js__WEBPACK_IMPORTED_MODULE_1__.Taxon({\n                id: result.taxon.id,\n                scientificName: result.taxon.name,\n                taxonRank: result.taxon.rank,\n                vernacularName: {\n                    [options.vernacularNameLanguage]: result.taxon.preferred_common_name\n                }\n            }),\n            url: result.uri,\n            images: result.photos.map(media => this._parseMedia(media))\n        }\n    }\n\n    _parseMedia (media) {\n        return {\n            src: media.url.replace('square', 'large'),\n            thumbnail: media.url,\n            caption: media.attribution\n        }\n    }\n\n    getCachedQuestions (category) {\n        return this.cache[category]?.questions\n    }\n\n    hasCachedQuestions (category) {\n        return this.cache.hasOwnProperty(category) && this.cache[category].questions.length > 0\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/providers/inaturalist.js?");

/***/ }),

/***/ "./src/providers/index.js":
/*!********************************!*\
  !*** ./src/providers/index.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getProvider: () => (/* binding */ getProvider)\n/* harmony export */ });\n/* harmony import */ var _gbif_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./gbif.js */ \"./src/providers/gbif.js\");\n/* harmony import */ var _inaturalist_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inaturalist.js */ \"./src/providers/inaturalist.js\");\n/* harmony import */ var _provider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./provider.js */ \"./src/providers/provider.js\");\n\n\n\n\nfunction getProvider (type) {\n  switch (type) {\n    case 'gbif': return new _gbif_js__WEBPACK_IMPORTED_MODULE_0__.GbifProvider()\n    case 'inaturalist': return new _inaturalist_js__WEBPACK_IMPORTED_MODULE_1__.iNaturalistProvider()\n  }\n\n  return new _provider_js__WEBPACK_IMPORTED_MODULE_2__.Provider()\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/providers/index.js?");

/***/ }),

/***/ "./src/providers/provider.js":
/*!***********************************!*\
  !*** ./src/providers/provider.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoQuestionsError: () => (/* binding */ NoQuestionsError),\n/* harmony export */   Provider: () => (/* binding */ Provider)\n/* harmony export */ });\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util.js */ \"./src/util.js\");\n\n\nclass NoQuestionsError extends Error {\n    constructor (message, category) {\n        super(message)\n        this.categoryId = category\n    }\n}\n\nclass Provider {\n    cache = {}\n\n    async getQuestion (category, options) {\n        if (!this.hasCachedQuestions(category)) {\n            const success = await this.fetchQuestions(category, options)\n            if (!success) {\n                throw new NoQuestionsError('No questions available for this taxon', category)\n            }\n        }\n\n        const cachedQuestions = this.getCachedQuestions(category)\n        const question = (0,_util_js__WEBPACK_IMPORTED_MODULE_0__.randomSample)(cachedQuestions)\n        cachedQuestions.splice(cachedQuestions.indexOf(question), 1)\n\n        return question\n    }\n\n    async fetchQuestions (category, options) {\n        return false\n    }\n\n    getCachedQuestions (category) {\n        return this.cache[category]\n    }\n\n    hasCachedQuestions (category) {\n        return this.cache.hasOwnProperty(category) && this.cache[category].length > 0\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/providers/provider.js?");

/***/ }),

/***/ "./src/quiz.js":
/*!*********************!*\
  !*** ./src/quiz.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Quiz: () => (/* binding */ Quiz)\n/* harmony export */ });\n/* harmony import */ var _locales_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locales.js */ \"./src/locales.js\");\n/* harmony import */ var _providers_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./providers/index.js */ \"./src/providers/index.js\");\n/* harmony import */ var _providers_provider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers/provider.js */ \"./src/providers/provider.js\");\n/* harmony import */ var _taxonomy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./taxonomy.js */ \"./src/taxonomy.js\");\n/* harmony import */ var _util_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.js */ \"./src/util.js\");\n\n\n\n\n\n\nclass Quiz {\n    round = null\n\n    constructor (id, config, settings) {\n        this.id = id\n        this.config = config\n        this.settings = settings\n        this.provider = (0,_providers_index_js__WEBPACK_IMPORTED_MODULE_1__.getProvider)(config.provider.type)\n        this.taxonomy = new _taxonomy_js__WEBPACK_IMPORTED_MODULE_3__.Taxonomy(config.taxa)\n    }\n\n    async loadRound () {\n        this.round = null\n\n        const category = (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.randomSample)(this.taxonomy.getActiveTaxa())\n        // TODO season/life stage\n        const options = {\n            ...this.config.provider.defaultOptions,\n            taxon: category,\n            vernacularNameLanguage: this.settings.vernacularNameLanguage\n        }\n\n        try {\n            const question = await this.provider.getQuestion(category.id, options)\n            this.round = { category, question }\n        } catch (error) {\n            if (error instanceof _providers_provider_js__WEBPACK_IMPORTED_MODULE_2__.NoQuestionsError) {\n                const taxon = this.taxonomy.taxaById[error.categoryId]\n                throw new Error(this.getMessage('error_no_question', this.getTaxonLabel(taxon)))\n            } else {\n                throw new Error(this.getMessage('error_general', error.message))\n            }\n        }\n\n        return this.round\n    }\n\n    performGuess (guess) {\n        if (!this.round || !guess) {\n            return\n        }\n\n        const { category, question } = this.round\n\n        if (guess === category.id) {\n            return { success: true, message: this.getMessage('guess_correct', this.getAnswerLabel(question.taxon, category)) }\n        }\n\n        const commonParent = this.taxonomy.getCommonParent(guess, category.id)\n        if (commonParent.id === guess) {\n            return { success: 'partial', message: this.getMessage('guess_imprecise', this.getTaxonLabel(commonParent)) }\n        } else if (commonParent) {\n            return { success: false, message: this.getMessage('guess_close', this.getTaxonLabel(commonParent)) }\n        }\n\n        const ancestor = this.taxonomy.taxaById[guess].path[0]\n        return { success: false, message: this.getMessage('guess_incorrect', this.getTaxonLabel(ancestor)) }\n    }\n\n    performGiveUp () {\n        if (!this.round) {\n            return\n        }\n\n        const { category, question } = this.round\n\n        return { success: false, message: this.getMessage('guess_giveup', this.getAnswerLabel(question.taxon, category)) }\n    }\n\n    getAnswerLabel (taxon, category) {\n        if (category.taxa !== taxon.id && !category.taxa.includes(taxon.id)) {\n            return this.getMessage('part_of', this.getTaxonLabel(taxon), this.getTaxonLabel(category))\n        }\n\n        return this.getTaxonLabel(category)\n    }\n\n    getTaxonLabel (taxon) {\n        return taxon.getLabel(this.settings.vernacularNameLanguage)\n    }\n\n    getMetadata () {\n        const language = this.settings.language\n        const backup = this.config.metadata.languages[0]\n        return {\n            title: this.config.metadata.title[language] || this.config.metadata.title[backup],\n            description: this.config.metadata.description[language] || this.config.metadata.description[backup]\n        }\n    }\n\n    getMessage (message, ...args) {\n        const locale = _locales_js__WEBPACK_IMPORTED_MODULE_0__[this.settings.language] || _locales_js__WEBPACK_IMPORTED_MODULE_0__.en\n        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.formatMessage)(locale[message] || message, ...args)\n    }\n\n    getUrl (withSettings) {\n        const options = { quiz: this.id }\n\n        if (withSettings) {\n            options.l = this.settings.language\n            options.nl = this.settings.vernacularNameLanguage\n\n            const activeTaxa = this.taxonomy.getActiveTaxa()\n            const allTaxa = Object.keys(this.taxonomy.taxaById)\n            if (allTaxa.length !== activeTaxa.length) {\n                options.taxon = activeTaxa.map(taxon => taxon.id).join('|')\n            }\n\n            // TODO season/life stage\n        }\n\n        return (0,_util_js__WEBPACK_IMPORTED_MODULE_4__.formatUrl)(window.location, options)\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/quiz.js?");

/***/ }),

/***/ "./src/taxon.js":
/*!**********************!*\
  !*** ./src/taxon.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Taxon: () => (/* binding */ Taxon)\n/* harmony export */ });\nfunction getChildTaxa (children) {\n  const taxa = []\n  for (const child of children) {\n    taxa.push(...child.taxa)\n    taxa.push(...getChildTaxa(child.children))\n  }\n  return taxa\n}\n\nclass Taxon {\n  constructor (taxon) {\n    this.id = taxon.id\n    this.scientificName = taxon.scientificName\n    this.vernacularName = taxon.vernacularName || {}\n    this.taxonRank = taxon.taxonRank\n    this.taxa = taxon.taxa ? [].concat(taxon.taxa) : []\n    this.children = taxon.children || []\n    this.path = taxon.path || []\n    this.active = taxon.active\n  }\n\n  getLabel (locale) {\n    let label = ''\n\n    if (this.scientificName) {\n      if (['genus', 'subgenus', 'species', 'subspecies', 'variety'].includes(this.taxonRank)) {\n        label += `<i>${this.scientificName}</i>`\n      } else if (['group', 'complex'].includes(this.taxonRank)) {\n        const [name, type = ''] = this.scientificName.split(/(?=-)/)\n        label += `<i>${name}</i>${type}`\n      } else {\n        label += this.scientificName\n      }\n    }\n\n    if (this.vernacularName[locale] && this.scientificName !== this.vernacularName[locale]) {\n      label += label ? ` (${this.vernacularName[locale]})` : this.vernacularName[locale]\n    }\n\n    return label\n  }\n\n  getChildTaxa () {\n    return getChildTaxa(this.children)\n  }\n\n  hasActiveChildTaxa () {\n    return this.children.length && this.children.some(child => child.active || child.hasActiveChildTaxa())\n  }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/taxon.js?");

/***/ }),

/***/ "./src/taxonomy.js":
/*!*************************!*\
  !*** ./src/taxonomy.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Taxonomy: () => (/* binding */ Taxonomy)\n/* harmony export */ });\n/* harmony import */ var _taxon_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./taxon.js */ \"./src/taxon.js\");\n\n\nfunction parseTaxon (taxon, path) {\n    const parsed = new _taxon_js__WEBPACK_IMPORTED_MODULE_0__.Taxon({\n        id: taxon.taxa ? taxon.taxa.toString() : null,\n        active: !!taxon.taxa,\n        path: path.slice(),\n        ...taxon\n    })\n\n    parsed.path.push(parsed)\n\n    if (taxon.children) {\n        parsed.children = parseTaxa(taxon.children, parsed.path)\n    }\n\n    return parsed\n}\n\nfunction parseTaxa (taxa, path) {\n    return taxa.map(taxon => parseTaxon(taxon, path))\n}\n\nfunction buildTaxonMap (taxon) {\n    const map = {}\n    if (taxon.id !== null) {\n        map[taxon.id] = taxon\n    }\n    if (taxon.children) {\n        for (const child of taxon.children) {\n            Object.assign(map, buildTaxonMap(child))\n        }\n    }\n    return map\n}\n\nclass Taxonomy {\n    constructor (taxonomy) {\n        this.taxaByTree = parseTaxa(taxonomy, [])\n        this.taxaById = buildTaxonMap({ id: null, children: this.taxaByTree })\n    }\n\n    setActive (id, active) {\n        this.taxaById[id].active = active\n    }\n\n    getActiveTaxa () {\n        const active = []\n        for (const id in this.taxaById) {\n            if (this.taxaById[id].active) {\n                active.push(this.taxaById[id])\n            }\n        }\n        return active\n    }\n\n    getCommonParent (a, b) {\n        let i = 0\n        while (this.taxaById[a].path[i] && this.taxaById[a].path[i] === this.taxaById[b].path[i]) {\n            i++\n        }\n\n        return this.taxaById[a].path[i - 1]\n    }\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/taxonomy.js?");

/***/ }),

/***/ "./src/util.js":
/*!*********************!*\
  !*** ./src/util.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatMessage: () => (/* binding */ formatMessage),\n/* harmony export */   formatUrl: () => (/* binding */ formatUrl),\n/* harmony export */   randomSample: () => (/* binding */ randomSample)\n/* harmony export */ });\nfunction randomSample (array) {\n    return array[Math.floor(Math.random() * array.length)]\n}\n\nfunction formatMessage (message, ...args) {\n    return message.replace(/\\{(0|[1-9]\\d*)\\}/g, (_, i) => args[i])\n}\n\nfunction formatUrl (route, urlOptions) {\n    const urlSearchParams = new URLSearchParams()\n    for (const key in urlOptions) {\n        if (urlOptions[key] == null) {\n            continue\n        }\n\n        for (const value of [].concat(urlOptions[key])) {\n            urlSearchParams.append(key, value)\n        }\n    }\n\n    const url = new URL(route)\n    url.search = urlSearchParams.toString()\n\n    return url\n}\n\n\n//# sourceURL=webpack://biodiversity-matcher/./src/util.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;